spring.application.name = produit-service

spring.output.ansi.enabled = always

logging.level.fr.formation = DEBUG

server.port = 8081

spring.datasource.url = jdbc:postgresql://localhost:5432/services
spring.datasource.username = postgres
spring.datasource.password = Not24Get

spring.jpa.generate-ddl = true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Client Eureka
eureka.client.service-url.defaultZone = http://localhost:9000/eureka/

# Configuration RabbitMQ
spring.rabbitmq.host = rabbit
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest

spring.cloud.stream.bindings.onCommentaireCreated-in-0.destination = commentaire
spring.cloud.stream.bindings.onCommentaireCreated-in-0.group = produit-service
spring.cloud.stream.rabbit.bindings.onCommentaireCreated-in-0.consumer.binding-routing-key = commentaire.create

spring.cloud.stream.bindings.onCommentaireCreated-out-0.destination = commentaire
spring.cloud.stream.rabbit.bindings.onCommentaireCreated-out-0.producer.routing-key-expression = 'commentaire.validate'

spring.cloud.stream.bindings.onCommentaireCreated-out-1.destination = commentaire
spring.cloud.stream.rabbit.bindings.onCommentaireCreated-out-1.producer.routing-key-expression = 'commentaire.reject'

spring.cloud.stream.bindings.onProduitCreated-out-0.destination = ms.produit
spring.cloud.stream.rabbit.bindings.onProduitCreated-out-0.producer.routing-key-expression = 'produit.created'
